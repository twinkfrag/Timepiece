<Window x:Class="twinkfrag.Timepiece.Views.Clock"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:twinkfrag.Timepiece.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:twinkfrag.Timepiece.Views"
        mc:Ignorable="d"
        Title="Clock"
		Height="200"
		Width="600"
		ResizeMode="NoResize"
		WindowStyle="None"
		ShowInTaskbar="False"
		AllowsTransparency="True"
		Topmost="True"
		SnapsToDevicePixels="True" 
		PreviewKeyDown="Clock_OnPreviewKeyDown"
		Deactivated="Clock_OnDeactivated"
		Background="{DynamicResource Background}" 
		Foreground="{DynamicResource Foreground}" 
		>
	<Window.DataContext>
		<vm:ClockVewModel />
	</Window.DataContext>
	<Window.Resources>
		<SolidColorBrush x:Key="Background" Color="Black"/>
		<SolidColorBrush x:Key="Foreground" Color="White"/>
	</Window.Resources>
	<i:Interaction.Triggers>

		<!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
		<!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
		<!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

		<!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
		<i:EventTrigger EventName="ContentRendered">
			<l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
		</i:EventTrigger>

		<!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
		<i:EventTrigger EventName="Closed">
			<l:DataContextDisposeAction/>
		</i:EventTrigger>

		<!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

	</i:Interaction.Triggers>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="4*" />
			<ColumnDefinition Width="9*" />
			<ColumnDefinition Width="7*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition />
		</Grid.RowDefinitions>
		<TextBlock Grid.Column="1" 
				   Grid.RowSpan="2"
				   Text="{Binding Time.Value, Mode=OneWay}" 
				   HorizontalAlignment="Center" 
				   VerticalAlignment="Center" 
				   FontSize="90" />
		<TextBlock Grid.Column="2"
				   Grid.Row="0"
				   Text="{Binding Date.Value, Mode=OneWay}"
				   HorizontalAlignment="Left"
				   VerticalAlignment="Bottom"
				   FontSize="48" />
		<TextBlock Grid.Column="2"
				   Grid.Row="1"
				   Text="{Binding Weekday.Value, Mode=OneWay}"
				   HorizontalAlignment="Left"
				   VerticalAlignment="Top"
				   FontSize="48" />
	</Grid>
</Window>
